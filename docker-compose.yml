services:
  postgres:
    build:
      context: .
      dockerfile: postgres.Dockerfile
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-markersdb}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - marker-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    networks:
      - marker-network
    depends_on:
      - postgres

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - marker-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    environment:
      - PORT=3000
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-markersdb}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-markersdb}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NODE_ENV=development
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MAPBOX_GEOCODING_TOKEN=${MAPBOX_GEOCODING_TOKEN}
    ports:
      - "3000:3000"
    networks:
      - marker-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps/backend/src:/app/apps/backend/src
      # Prevent node_modules from being overwritten
      - backend_node_modules:/app/node_modules
      - backend_app_node_modules:/app/apps/backend/node_modules

  websocket:
    build:
      context: .
      dockerfile: apps/websocket/Dockerfile
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - BACKEND_URL=http://backend:3000 # Add this environment variable
    ports:
      - "8081:8081"
    networks:
      - marker-network
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_started # Add this dependency
    volumes:
      - ./apps/websocket:/app/apps/websocket
      - /app/apps/websocket/node_modules

  frontend:
    build:
      context: .
      dockerfile: apps/web-vanilla/Dockerfile
    ports:
      - "5173:5173"
    networks:
      - marker-network
    volumes:
      - ./apps/web-vanilla:/app/apps/web-vanilla
      - /app/apps/web-vanilla/node_modules
    depends_on:
      - backend
      - websocket

networks:
  marker-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  backend_node_modules:
  backend_app_node_modules:
  dbeaver_data:
